


Scenario Based questions:

1)Will the reducer work or not if you use “Limit 1” in any HiveQL query?
Answer: No, as no aggregations are done

2)Suppose I have installed Apache Hive on top of my Hadoop cluster using default metastore configuration. Then, what will happen if we have multiple clients trying to access Hive at the same time? 
Answer: No, as the default metastore allows only one hive session for multiple clients we need local/remote metastore.

3)Suppose, I create a table that contains details of all the transactions done by the customers: CREATE TABLE transaction_details (cust_id INT, amount FLOAT, month STRING, country STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘,’ ;
Now, after inserting 50,000 records in this table, I want to know the total revenue generated for each month. But, Hive is taking too much time in processing this query. How will you solve this problem and list the steps that I will be taking in order to do so?
Answer:Partitioning the same might help, for that set hive.exec.dynamic.partition = true

4)How can you add a new partition for the month December in the above partitioned table?
Answer: Alter table transaction_details Add partition (month='december') location '/partitioned_transaction';
I am inserting data into a table based on partitions dynamically. But, I received an error – FAILED ERROR IN SEMANTIC ANALYSIS: Dynamic partition strict mode requires at least one static partition column. How will you remove this error?
Answer: set hive.exec.dynamic.partition.mode = true
set hive.exec.dynamic.partition = true


5)Suppose, I have a CSV file – ‘sample.csv’ present in ‘/temp’ directory with the following entries:
id first_name last_name email gender ip_address
How will you consume this CSV file into the Hive warehouse using built-in SerDe?
create external table sample(
    id int,
    first_name string,
    last_name string,
    email string,
    gender string,
    ip_address string
) row format serde ‘org.apache.hadoop.hive.serde2.OpenCSVSerde’ 

STORED AS TEXTFILE LOCATION ‘/temp’;
6)
Suppose, I have a lot of small CSV files present in the input directory in HDFS and I want to create a single Hive table corresponding to these files. The data in these files are in the format: {id, name, e-mail, country}. Now, as we know, Hadoop performance degrades when we use lots of small files.
So, how will you solve this problem where we want to create a single Hive table for lots of small files without degrading the performance of the system?
Answer: create a sequencefile table and transfer all data

7)
LOAD DATA LOCAL INPATH ‘Home/country/state/’
OVERWRITE INTO TABLE address;

The following statement failed to execute. What can be the cause?
Answer: directory name should be: /home....
8)Is it possible to add 100 nodes when we already have 100 nodes in Hive? If yes, how?
By adding a new system and setting up new nodes.














Hive Practical questions:

Hive Join operations

Create a  table named CUSTOMERS(ID | NAME | AGE | ADDRESS   | SALARY)
Create a Second  table ORDER(OID | DATE | CUSTOMER_ID | AMOUNT
)
Answer:
create table CUSTOMERS(ID INT,NAME STRING,AGE INT,ADDRESS STRING,SALARY INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';
Create table ORDER('OID' INT,'DATE' STRING',CUSTOMER_ID' INT,'AMOUNT' INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';
Now perform different joins operations on top of these tables
(Inner JOIN, LEFT OUTER JOIN ,RIGHT OUTER JOIN ,FULL OUTER JOIN)
Answer: Select * from Customers c inner join Order o 
on c.id = o.customer_id
Select * from Customers c left outer join Order o 
on c.id = o.customer_id
Select * from Customers c right outer join Order o 
on c.id = o.customer_id
Select * from Customers c full outer join Order o 
on c.id = o.customer_id

Select * from Customers c left join Order o 
on c.id = o.customer_id


BUILD A DATA PIPELINE WITH HIVE

Download a data from the given location - 
https://archive.ics.uci.edu/ml/machine-learning-databases/00360/

1. Create a hive table as per given schema in your dataset 

Create table AirQuality(
Date String,
Time String,
CO(GT) decimal(2,2),
PT08.S1(CO)  INT,
NMHC(GT) INT,
C6H6(GT) decimal(2,2),
PT08.S2(NMHC) INT,
NOx(GT) INT,
PT08.S3(NOx) INT,
NO2(GT) INT,
PT08.S4(NO2) INT,
PT08.S5(O3) INT,
T  decimal(2,2),
RH  decimal(2,2),
AH  decimal(2,2)
)  row format serde ‘org.apache.hadoop.hive.serde2.OpenCSVSerde’ 

2. try to place a data into table location
LOAD DATA LOCAL INPATH 'file:///config/workspace/AirQualityUCI.csv' into table AirQuality;
3. Perform a select operation .
set hive.cli.print.headers = true;
select * from AirQuality;
4. Fetch the result of the select operation in your local as a csv file . 
Insert overwrite local directory '/workspace/AirQuality.csv' select * from AirQuality;
5. Perform group by operation . 
Select CO(GT) ,Date from AirQuality group by Date;
7. Perform filter operation at least 5 kinds of filter examples . 
8. show and example of regex operation
select regex_extract(Date,'11(.*)',8)
9. alter table operation 
Alter tabel AirQuality RENAME to AirQualityUCI
10 . drop table operation
Drop table AirQuality
12 . order by operation . 
select * from AirQuality order by Date;
13 . where clause operations you have to perform . 
select * from AirQuality where CO(GT) < 2;
14 . sorting operation you have to perform . 
select * from AirQuality order by Date;
15 . distinct operation you have to perform . 
select distinct(Date) from AirQuality;
16 . like an operation you have to perform .
select * from AirQuality where Date like '11-03-2004';
17 . union operation you have to perform . 
select distinct(Date) from AirQuality
union
select distinct(time) from AirQuality
18 . table view operation you have to perform . 
create view AirQualityview as
select * from AirQuality;

hive operation with python

Create a python application that connects to the Hive database for extracting data, creating sub tables for data processing, drops temporary tables.fetch rows to python itself into a list of tuples and mimic the join or filter operations
import petl as etl
import pandas as pd
import cdata.apachehive as mod

cnxn = mod.connect("Server=127.0.0.1;Port=10000;TransportMode=BINARY;")

sql = "SELECT City, CompanyName FROM Customers WHERE Country = 'US'"

table1 = etl.fromdb(cnxn,sql)

table2 = etl.sort(table1,'CompanyName')

etl.tocsv(table2,'customers_data.csv')

table3 = [ ['City','CompanyName'], ['NewCity1','NewCompanyName1'], ['NewCity2','NewCompanyName2'], ['NewCity3','NewCompanyName3'] ]

etl.appenddb(table3, cnxn, 'Customers')